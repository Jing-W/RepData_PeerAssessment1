plot(x, y3, ylim=range(c(y1, y2, y3)), type = "l", axes = FALSE, xlab = "", ylab = "", col = "blue", main = NULL)
x <- data_needed$DateTime
y1 <- as.numeric(as.character(data_needed$Sub_metering_1))
y2 <- as.numeric(as.character(data_needed$Sub_metering_2))
y3 <- das.numeric(as.character(data_needed$Sub_metering_3))
plot(x, y1, ylim=range(c(y1, y2, y3)), type = "l", xlab = "", ylab = "Energy sub metering", col = "black", main = NULL)
par(new = TRUE)
plot(x, y2, ylim=range(c(y1, y2, y3)), type = "l", axes = FALSE, xlab = "", ylab = "", col = "red", main = NULL)
par(new = TRUE)
plot(x, y3, ylim=range(c(y1, y2, y3)), type = "l", axes = FALSE, xlab = "", ylab = "", col = "blue", main = NULL)
legend("topright", pch = 1, col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
legend("topright", pch = 1, col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
dev.copy(png, file = "plot3.png", width = 480, height = 480)
dev.off()
png(file = "plot3.png", width = 480, height = 480)
png(file = "plot3.png", width = 480, height = 480)
plot(x, y1, ylim=range(c(y1, y2, y3)), type = "l", xlab = "", ylab = "Energy sub metering", col = "black", main = NULL)
par(new = TRUE)
plot(x, y2, ylim=range(c(y1, y2, y3)), type = "l", axes = FALSE, xlab = "", ylab = "", col = "red", main = NULL)
par(new = TRUE)
plot(x, y3, ylim=range(c(y1, y2, y3)), type = "l", axes = FALSE, xlab = "", ylab = "", col = "blue", main = NULL)
legend("topright", pch = 1, col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
#dev.copy(png, file = "plot3.png", width = 480, height = 480)
dev.off()
View(data_needed)
str(data_needed)
v <- as.numeric(as.character(data_needed$Voltage))
par(mfrow = c(2, 2), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
# plot 1
with(data_needed, plot(DateTime, Global_active_power, type = "l", main = NULL, xlab = "", ylab = "Global Active Power (kilowatts)"))
# plot 2
plot(x, v, type = "l", main = NULL, xlab = "", ylab = "Voltage")
par(mfrow = c(2, 2), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
# plot 1
with(data_needed, plot(DateTime, Global_active_power, type = "l", main = NULL, xlab = "", ylab = "Global Active Power (kilowatts)"))
# plot 2
plot(x, v, type = "l", main = NULL, xlab = "", ylab = "Voltage")
# plot 3
plot(x, y1, ylim=range(c(y1, y2, y3)), type = "l", xlab = "", ylab = "Energy sub metering", col = "black", main = NULL)
par(new = TRUE)
plot(x, y2, ylim=range(c(y1, y2, y3)), type = "l", axes = FALSE, xlab = "", ylab = "", col = "red", main = NULL)
par(new = TRUE)
plot(x, y3, ylim=range(c(y1, y2, y3)), type = "l", axes = FALSE, xlab = "", ylab = "", col = "blue", main = NULL)
legend("topright", pch = 1, col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
ap <- as.numeric(as.character(data_needed$Global_active_power))
rap <- as.numeric(as.character(data_needed$Global_reactive_power))
par(mfrow = c(2, 2), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
# plot 1
plot(x, ap, type = "l", main = NULL, xlab = "", ylab = "Global Active Power (kilowatts)")
# plot 2
plot(x, v, type = "l", main = NULL, xlab = "", ylab = "Voltage")
# plot 3
plot(x, y1, ylim=range(c(y1, y2, y3)), type = "l", xlab = "", ylab = "Energy sub metering", col = "black", main = NULL)
par(new = TRUE)
plot(x, y2, ylim=range(c(y1, y2, y3)), type = "l", axes = FALSE, xlab = "", ylab = "", col = "red", main = NULL)
par(new = TRUE)
plot(x, y3, ylim=range(c(y1, y2, y3)), type = "l", axes = FALSE, xlab = "", ylab = "", col = "blue", main = NULL)
legend("topright", pch = 1, col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
#plot 4
plot(x, rap, type = "l", main = NULL, xlab = "")
par(mfrow = c(2, 2), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
# plot 1
plot(x, ap, type = "l", main = NULL, xlab = "", ylab = "Global Active Power (kilowatts)")
# plot 2
plot(x, v, type = "l", main = NULL, xlab = "", ylab = "Voltage")
# plot 3
plot(x, y1, ylim=range(c(y1, y2, y3)), type = "l", xlab = "", ylab = "Energy sub metering", col = "black", main = NULL)
par(new = TRUE)
plot(x, y2, ylim=range(c(y1, y2, y3)), type = "l", axes = FALSE, xlab = "", ylab = "", col = "red", main = NULL)
par(new = TRUE)
plot(x, y3, ylim=range(c(y1, y2, y3)), type = "l", axes = FALSE, xlab = "", ylab = "", col = "blue", main = NULL)
legend("topright", pch = 1, col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
#plot 4
plot(x, rap, type = "l", main = NULL, xlab = "", ylab = "Global_reactive_power")
png(file = "plot4.png", width = 480, height = 480)
par(mfrow = c(2, 2), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
# plot 1
plot(x, ap, type = "l", main = NULL, xlab = "", ylab = "Global Active Power (kilowatts)")
# plot 2
plot(x, v, type = "l", main = NULL, xlab = "", ylab = "Voltage")
# plot 3
plot(x, y1, ylim=range(c(y1, y2, y3)), type = "l", xlab = "", ylab = "Energy sub metering", col = "black", main = NULL)
par(new = TRUE)
plot(x, y2, ylim=range(c(y1, y2, y3)), type = "l", axes = FALSE, xlab = "", ylab = "", col = "red", main = NULL)
par(new = TRUE)
plot(x, y3, ylim=range(c(y1, y2, y3)), type = "l", axes = FALSE, xlab = "", ylab = "", col = "blue", main = NULL)
legend("topright", pch = 1, col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
#plot 4
plot(x, rap, type = "l", main = NULL, xlab = "", ylab = "Global_reactive_power")
#dev.copy(png, file = "plot3.png", width = 480, height = 480)
dev.off()
png(file = "plot4.png", width = 480, height = 480)
par(mfrow = c(2, 2), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
# plot 1
plot(x, ap, type = "l", main = NULL, xlab = "", ylab = "Global Active Power (kilowatts)")
# plot 2
plot(x, v, type = "l", main = NULL, xlab = "", ylab = "Voltage")
# plot 3
plot(x, y1, ylim=range(c(y1, y2, y3)), type = "l", xlab = "", ylab = "Energy sub metering", col = "black", main = NULL)
par(new = TRUE)
plot(x, y2, ylim=range(c(y1, y2, y3)), type = "l", axes = FALSE, xlab = "datetime", ylab = "", col = "red", main = NULL)
par(new = TRUE)
plot(x, y3, ylim=range(c(y1, y2, y3)), type = "l", axes = FALSE, xlab = "", ylab = "", col = "blue", main = NULL)
legend("topright", pch = 1, col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
#plot 4
plot(x, rap, type = "l", main = NULL, xlab = "datetime", ylab = "Global_reactive_power")
#dev.copy(png, file = "plot3.png", width = 480, height = 480)
dev.off()
png(file = "plot4.png", width = 480, height = 480)
par(mfrow = c(2, 2), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
# plot 1
plot(x, ap, type = "l", main = NULL, xlab = "", ylab = "Global Active Power (kilowatts)")
# plot 2
plot(x, v, type = "l", main = NULL, xlab = "datetime", ylab = "Voltage")
# plot 3
plot(x, y1, ylim=range(c(y1, y2, y3)), type = "l", xlab = "", ylab = "Energy sub metering", col = "black", main = NULL)
par(new = TRUE)
plot(x, y2, ylim=range(c(y1, y2, y3)), type = "l", axes = FALSE, xlab = "", ylab = "", col = "red", main = NULL)
par(new = TRUE)
plot(x, y3, ylim=range(c(y1, y2, y3)), type = "l", axes = FALSE, xlab = "", ylab = "", col = "blue", main = NULL)
legend("topright", pch = 1, col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
#plot 4
plot(x, rap, type = "l", main = NULL, xlab = "datetime", ylab = "Global_reactive_power")
#dev.copy(png, file = "plot3.png", width = 480, height = 480)
dev.off()
png(file = "plot4.png", width = 480, height = 480)
par(mfrow = c(2, 2), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
# plot 1
plot(x, ap, type = "l", main = NULL, xlab = "", ylab = "Global Active Power")
# plot 2
plot(x, v, type = "l", main = NULL, xlab = "datetime", ylab = "Voltage")
# plot 3
plot(x, y1, ylim=range(c(y1, y2, y3)), type = "l", xlab = "", ylab = "Energy sub metering", col = "black", main = NULL)
par(new = TRUE)
plot(x, y2, ylim=range(c(y1, y2, y3)), type = "l", axes = FALSE, xlab = "", ylab = "", col = "red", main = NULL)
par(new = TRUE)
plot(x, y3, ylim=range(c(y1, y2, y3)), type = "l", axes = FALSE, xlab = "", ylab = "", col = "blue", main = NULL)
legend("topright", pch = 1, col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
#plot 4
plot(x, rap, type = "l", main = NULL, xlab = "datetime", ylab = "Global_reactive_power")
#dev.copy(png, file = "plot3.png", width = 480, height = 480)
dev.off()
with(data_needed, plot(DateTime, as.numeric(as.charactor(Global_active_power)), type = "l", main = NULL, xlab = "", ylab = "Global Active Power (kilowatts)"))
dev.copy(png, file = "plot2.png", width = 480, height = 480)
dev.off()
with(data_needed, plot(DateTime, as.numeric(as.charactor(Global_active_power)), type = "l", main = NULL, xlab = "", ylab = "Global Active Power (kilowatts)"))
dev.copy(png, file = "plot2.png", width = 480, height = 480)
dev.off()
png(file = "plot2.png", width = 480, height = 480)
with(data_needed, plot(DateTime, as.numeric(as.charactor(Global_active_power)), type = "l", main = NULL, xlab = "", ylab = "Global Active Power (kilowatts)"))
# dev.copy(png, file = "plot2.png", width = 480, height = 480)
dev.off()
with(data_needed, plot(DateTime, as.numeric(as.charactor(Global_active_power)), type = "l", main = NULL, xlab = "", ylab = "Global Active Power (kilowatts)"))
png(file = "plot2.png", width = 480, height = 480)
with(data_needed, plot(DateTime, as.numeric(as.character(Global_active_power)), type = "l", main = NULL, xlab = "", ylab = "Global Active Power (kilowatts)"))
# dev.copy(png, file = "plot2.png", width = 480, height = 480)
dev.off()
legend("topright", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
legend("topright", lwd = 1, lty = c(1, 2, 3), col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
legend("topright", lwd = 1, lty = 1, col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
png(file = "plot3.png", width = 480, height = 480)
plot(x, y1, ylim=range(c(y1, y2, y3)), type = "l", xlab = "", ylab = "Energy sub metering", col = "black", main = NULL)
par(new = TRUE)
plot(x, y2, ylim=range(c(y1, y2, y3)), type = "l", axes = FALSE, xlab = "", ylab = "", col = "red", main = NULL)
par(new = TRUE)
plot(x, y3, ylim=range(c(y1, y2, y3)), type = "l", axes = FALSE, xlab = "", ylab = "", col = "blue", main = NULL)
legend("topright", lwd = 1, lty = 1, col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
#dev.copy(png, file = "plot3.png", width = 480, height = 480)
dev.off()
png(file = "plot3.png", width = 480, height = 480)
plot(x, y1, ylim=range(c(y1, y2, y3)), type = "l", xlab = "", ylab = "Energy sub metering", col = "black", main = NULL)
par(new = TRUE)
plot(x, y2, ylim=range(c(y1, y2, y3)), type = "l", axes = FALSE, xlab = "", ylab = "", col = "red", main = NULL)
par(new = TRUE)
plot(x, y3, ylim=range(c(y1, y2, y3)), type = "l", axes = FALSE, xlab = "", ylab = "", col = "blue", main = NULL)
legend("topright", lwd = 1, lty = 1, col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
#dev.copy(png, file = "plot3.png", width = 480, height = 480)
dev.off()
png(file = "plot4.png", width = 480, height = 480)
par(mfrow = c(2, 2), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
# plot 1
plot(x, ap, type = "l", main = NULL, xlab = "", ylab = "Global Active Power")
# plot 2
plot(x, v, type = "l", main = NULL, xlab = "datetime", ylab = "Voltage")
# plot 3
plot(x, y1, ylim=range(c(y1, y2, y3)), type = "l", xlab = "", ylab = "Energy sub metering", col = "black", main = NULL)
par(new = TRUE)
plot(x, y2, ylim=range(c(y1, y2, y3)), type = "l", axes = FALSE, xlab = "", ylab = "", col = "red", main = NULL)
par(new = TRUE)
plot(x, y3, ylim=range(c(y1, y2, y3)), type = "l", axes = FALSE, xlab = "", ylab = "", col = "blue", main = NULL)
legend("topright", lwd = 1, lty = 1, col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
#plot 4
plot(x, rap, type = "l", main = NULL, xlab = "datetime", ylab = "Global_reactive_power")
#dev.copy(png, file = "plot3.png", width = 480, height = 480)
dev.off()
0.75 * 0.3
0.48 * 0.7
0.225/(0.225+0.336)
?qnorm
qnorm(0.32, mean = 80, sd = 10)
qnorm(0.30, mean = 80, sd = 10)
qnorm(0.25, mean = 80, sd = 10)
qnorm(0.1586, mean = 80, sd = 10)
qnorm(0.95, mean = 1100, sd = 75)
qnorm(0.95, mean = 1100, sd = 7.5)
5 ^ 2
5 * 0.5 ^ 4 * 0.5
0.5^5
5 * 0.5 ^ 4 * 0.5 + 0.5 ^ 5
round((pnorm(16, 15, 1)-pnorm(14, 15, 1)), 2)
pnorm(70, mean = 80, sd = 10)
sqrt(4)
sqrt(1/12)/10
ppois(10, lambda = 5 * 3)
install.packages(knitr)
install.packages("knitr")
library(knitr)
getwd()
setwd("/Users/jingwang/github/RepData_PeerAssessment1")
data <- read.csv("./activity.csv")
head(data)
data$steps
str(data)
hist(data$date, data$steps)
data$date1 <- strptime(data%date)
hist(data$date, data$steps, format = "%Y-%m-%d")
data$date1 <- strptime(data%date, format = "%Y-%m-%d")
data$date1 <- strptime(as.character(data%date), format = "%Y-%m-%d")
as.POSIXct(as.character(data$date), format = "%Y-%m-%d")
View(data)
data%date_converted <- as.POSIXct(as.character(data$date), format = "%Y-%m-%d")
data%date <- as.POSIXct(as.character(data$date), format = "%Y-%m-%d")
data%date_converted <- as.POSIXct(as.character(data$date), format = "%Y-%m-%d")
data%date_converted <- as.POSIXct(as.character(data$date), format = "%Y-%m-%d")
as.POSIXct(as.character(data$date), format = "%Y-%m-%d")
a <- as.POSIXct(as.character(data$date), format = "%Y-%m-%d")
data$date_converted <- a
hist(a, steps)
hist(a, data$steps)
hist(a, data$steps, na.rm = T)
hist(data$date, data$steps)
hist(data$date, data$steps, na.rm = T)
?hist
hist(data$steps)
hist(data$steps, date$date)
hist(data$steps)
par(mfrow = c(1, 1))
hist(data$steps)
max(data$steps)
max(data$steps, na.rm = T)
tapply(data$steps, data$date, sum)
result <- tapply(data$steps, data$date, sum)
result <- tapply(data$steps, data$date, sum, na.rm = T)
result <- tapply(data$steps, data$date, sum)
data(data$date = "2012-11-30")
data(data$date == "2012-11-30")
data(data$date == "2012-11-30", )
data$steps(data$date == "2012-11-30")
data$steps([data$date == "2012-11-30"])
data$steps(as.character(data$date) == "2012-11-30")
data(data$steps = 0)
data(data$steps == 0)
# Read the UCI power consumption dataset
# dev.off()
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
print(p)
?trellis.par.set
?print.trellis
?splom
library(datasets)
data(airquality)
head(airquality)
str(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
install.packages("ggplot2")
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
data(movies)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies, smooth = "loess")
?geom_smooth
getwd()
data <- read.csv("./activity.csv")
data$data <- as.POSIXct(as.character(data$date), format = "%Y-%m-%d")
data$date_c <- as.POSIXct(as.character(data$date), format = "%Y-%m-%d")
data <- read.csv("./activity.csv")
data$date_c <- as.POSIXct(as.character(data$date), format = "%Y-%m-%d")
tapply(data$steps, data$date, sum, na.rm = T)
a <- tapply(data$steps, data$date, sum, na.rm = T)
data[data$date == "2012-11-12"]
data[data$date == "2012-11-12", ]
sum(data$steps[data$date == "2012-11-12", ])
sum(data$steps[data$date == "2012-11-12"])
stepsPerDayNoNA <- tapply(data$steps, data$date, sum, na.rm = T)
hist(stepsPerDayNoNA)
hist(stepsPerDayNoNA, main = "Steps per day (ignore NA)", col = "blue", xlab = "Steps per day")
source('~/.active-rstudio-document', echo=TRUE)
median(stepsPerDayNoNA)
View(data)
avgStepsPer5MinNoNA <- tapply(data$steps, data$interval, mean, na.rm = T)
plot(data$interval, avgStepsPer5MinNoNA, type = "l")
plot(as.factor(data$interval), avgStepsPer5MinNoNA, type = "l")
as.factor(data$interval)
plot(levels(data$interval), avgStepsPer5MinNoNA, type = "l")
as.factor(data$interval)
levels(as.factor(data$interval))
plot(levels(as.factor(data$interval)), avgStepsPer5MinNoNA, type = "l")
plot(levels(as.factor(data$interval)), avgStepsPer5MinNoNA, type = "l", main = "Average daily activity pattern", xlab = "Time", ylab = "Average steps per 5 min")
plot(levels(as.factor(data$interval)), avgStepsPer5MinNoNA, type = "l", main = "Average daily activity pattern", xlab = "5 min interval", ylab = "Average steps per 5 min")
max(avgStepsPer5MinNoNA)
which(max(avgStepsPer5MinNoNA))
which(avgStepsPer5MinNoNA == max(avgStepsPer5MinNoNA))
avgStepsPer5MinNoNA[835]
which(avgStepsPer5MinNoNA == max(avgStepsPer5MinNoNA), na.rm = T)
avgStepsPer5MinNoNA[104]
avgStepsPer5MinNoNA
avgStepsPer5MinNoNA[max(avgStepsPer5MinNoNA)]
a <- which(avgStepsPer5MinNoNA == max(avgStepsPer5MinNoNA))
sum(is.na(data$steps))
library(plyr)
f <- function(x){
m <- mean(x, na.rm = TRUE)
x[is.na(x)] <- m
x
}
steps <- tapply(data$steps, data$date, f)
steps[[1]]
data$steps[1:288]
sum(is.na(steps))
sum(is.nan(steps))
mean(data$steps[1:288], na.rm = T)
steps <- tapply(data$steps, data$interval, f)
steps <- ave(data$steps, data$interval, f)
steps <- ave(data$steps, data$interval, f)
steps <- ave(data$steps, data$interval, FUN = f)
dataNoNA <- data
dataNoNA$steps <- ave(data$steps, data$interval, FUN = f)
data1 <- data
data1$steps <- ave(data$steps, data$interval, FUN = f)
stepsPerDayMeanNA <- tapply(data$steps, data$date, sum, na.rm = T)
hist(stepsPerDayMeanNA, main = "Steps per day (ignore NA)", col = "blue", xlab = "Steps per day")
mean(stepsPerDayMeanNA)
median(stepsPerDayMeanNA)
mean(stepsPerDayNoNA)
median(stepsPerDayNoNA)
stepsPerDayMeanNA <- tapply(data1$steps, data1$date, sum, na.rm = T)
hist(stepsPerDayMeanNA, main = "Steps per day (ignore NA)", col = "blue", xlab = "Steps per day")
mean(stepsPerDayMeanNA)
median(stepsPerDayMeanNA)
sum(is.na(data$steps))
f <- function(x){
m <- median(x, na.rm = TRUE)
x[is.na(x)] <- m
x
}
data1 <- data
data1$steps <- ave(data$steps, data$interval, FUN = f)
stepsPerDayMeanNA <- tapply(data1$steps, data1$date, sum, na.rm = T)
hist(stepsPerDayMeanNA, main = "Steps per day (ignore NA)", col = "blue", xlab = "Steps per day")
mean(stepsPerDayMeanNA)
median(stepsPerDayMeanNA)
hist(stepsPerDayMeanNA, main = "Steps per day (mean NA)", col = "red", xlab = "Steps per day")
hist(stepsPerDayNoNA, main = "Steps per day (ignore NA)", col = "blue", xlab = "Steps per day")
hist(stepsPerDayMeanNA, main = "Steps per day (mean NA)", col = "red", xlab = "Steps per day")
sum(data$steps, na.rm = T)
sum(data1$steps, na.rm = T)
stepsPerDayMeanNA
stepsPerDayNoNA
?ave
?weekdays
weekdays(data$data_c)
data$data_c.wday
data$data_c
data$date_c.wday
data$date_c
data$date_c[1]
data$date_c[1].wday
data$date_c$wday
data$date_c[1]$wday
as.POSIXlt(data$date)$wday
as.POSIXlt(data$date)
source('~/github/RepData_PeerAssessment1/PA1.R', echo=TRUE)
View(data)
data1$date_c$wday
data1$date_c
data <- read.csv("./activity.csv")
data$data_c <- as.POSIXct(data$date)
stepsPerDayNoNA <- tapply(data$steps, data$date, sum, na.rm = T)
hist(stepsPerDayNoNA, main = "Steps per day (ignore NA)", col = "blue", xlab = "Steps per day")
mean(stepsPerDayNoNA)
median(stepsPerDayNoNA)
avgStepsPer5MinNoNA <- tapply(data$steps, data$interval, mean, na.rm = T)
plot(levels(as.factor(data$interval)), avgStepsPer5MinNoNA, type = "l", main = "Average daily activity pattern", xlab = "5 min interval", ylab = "Average steps per 5 min")
which(avgStepsPer5MinNoNA == max(avgStepsPer5MinNoNA))
sum(is.na(data$steps))
f <- function(x){
m <- median(x, na.rm = TRUE)
x[is.na(x)] <- m
x
}
data1 <- data
data1$steps <- ave(data$steps, data$interval, FUN = f)
stepsPerDayMeanNA <- tapply(data1$steps, data1$date, sum, na.rm = T)
hist(stepsPerDayMeanNA, main = "Steps per day (mean NA)", col = "red", xlab = "Steps per day")
mean(stepsPerDayMeanNA)
median(stepsPerDayMeanNA)
View(data1)
data <- read.csv("./activity.csv")
data$date_c <- as.POSIXct(data$date)
stepsPerDayNoNA <- tapply(data$steps, data$date, sum, na.rm = T)
hist(stepsPerDayNoNA, main = "Steps per day (ignore NA)", col = "blue", xlab = "Steps per day")
mean(stepsPerDayNoNA)
median(stepsPerDayNoNA)
avgStepsPer5MinNoNA <- tapply(data$steps, data$interval, mean, na.rm = T)
plot(levels(as.factor(data$interval)), avgStepsPer5MinNoNA, type = "l", main = "Average daily activity pattern", xlab = "5 min interval", ylab = "Average steps per 5 min")
which(avgStepsPer5MinNoNA == max(avgStepsPer5MinNoNA))
sum(is.na(data$steps))
f <- function(x){
m <- median(x, na.rm = TRUE)
x[is.na(x)] <- m
x
}
data1 <- data
data1$steps <- ave(data$steps, data$interval, FUN = f)
stepsPerDayMeanNA <- tapply(data1$steps, data1$date, sum, na.rm = T)
hist(stepsPerDayMeanNA, main = "Steps per day (mean NA)", col = "red", xlab = "Steps per day")
mean(stepsPerDayMeanNA)
median(stepsPerDayMeanNA)
data1$date_c$wday
a <- data1$date_c
a
a.wday
a$wday
a <- as.POSIXct(data$date)
a$wday
data <- read.csv("./activity.csv")
data$date_c <- as.POSIXlt(data$date)
stepsPerDayNoNA <- tapply(data$steps, data$date, sum, na.rm = T)
hist(stepsPerDayNoNA, main = "Steps per day (ignore NA)", col = "blue", xlab = "Steps per day")
mean(stepsPerDayNoNA)
median(stepsPerDayNoNA)
avgStepsPer5MinNoNA <- tapply(data$steps, data$interval, mean, na.rm = T)
plot(levels(as.factor(data$interval)), avgStepsPer5MinNoNA, type = "l", main = "Average daily activity pattern", xlab = "5 min interval", ylab = "Average steps per 5 min")
which(avgStepsPer5MinNoNA == max(avgStepsPer5MinNoNA))
sum(is.na(data$steps))
f <- function(x){
m <- median(x, na.rm = TRUE)
x[is.na(x)] <- m
x
}
data1 <- data
data1$steps <- ave(data$steps, data$interval, FUN = f)
stepsPerDayMeanNA <- tapply(data1$steps, data1$date, sum, na.rm = T)
hist(stepsPerDayMeanNA, main = "Steps per day (mean NA)", col = "red", xlab = "Steps per day")
mean(stepsPerDayMeanNA)
median(stepsPerDayMeanNA)
data1$date_c$wday
weekdays(.leap.seconds)
data1$date_c$wday
data1$date_c$wday == 0
data1$weekdayFactor <- ifelse(data1$date_c$wday == 0 or data1$date_c$wday == 6, "weekend", "weekday")
data1$weekdayFactor <- ifelse(data1$date_c$wday == 0 | data1$date_c$wday == 6, "weekend", "weekday")
View(data1)
data1$weekdayFactor
library(lattice)
View(dataNoNA)
View(data1)
xyplot(interval ~ steps | weekdayFactor, data1)
xyplot(interval ~ steps | weekdayFactor, data1, type = "l")
xyplot(steps ~ interval | weekdayFactor, data1, type = "l")
xyplot(steps ~ interval | weekdayFactor, data1, type = "a")
xyplot(steps ~ interval | weekdayFactor, data1, type = "a")
xyplot(steps ~ interval | weekdayFactor, data1, type = "a")
xyplot(steps ~ interval | weekdayFactor, data1, type = "la")
data <- read.csv("./activity.csv")
data$date_c <- as.POSIXlt(data$date)
stepsPerDayNoNA <- tapply(data$steps, data$date, sum, na.rm = T)
hist(stepsPerDayNoNA, main = "Steps per day (ignore NA)", col = "blue", xlab = "Steps per day")
mean(stepsPerDayNoNA)
median(stepsPerDayNoNA)
avgStepsPer5MinNoNA <- tapply(data$steps, data$interval, mean, na.rm = T)
plot(levels(as.factor(data$interval)), avgStepsPer5MinNoNA, type = "l", main = "Average daily activity pattern", xlab = "Interval", ylab = "Average steps per interval")
which(avgStepsPer5MinNoNA == max(avgStepsPer5MinNoNA))
sum(is.na(data$steps))
replaceNAwithMedian <- function(x){
m <- median(x, na.rm = TRUE)
x[is.na(x)] <- m
x
}
data1 <- data
data1$steps <- ave(data$steps, data$interval, FUN = replaceNAwithMedian)
stepsPerDayMeanNA <- tapply(data1$steps, data1$date, sum, na.rm = T)
hist(stepsPerDayMeanNA, main = "Steps per day (mean NA)", col = "red", xlab = "Steps per day")
mean(stepsPerDayMeanNA)
median(stepsPerDayMeanNA)
data1$weekdayFactor <- ifelse(data1$date_c$wday == 0 | data1$date_c$wday == 6, "weekend", "weekday")
library(lattice)
xyplot(steps ~ interval | weekdayFactor, data1, type = "a")
xyplot(steps ~ interval | weekdayFactor, data1, type = "a")
p <- xyplot(steps ~ interval | weekdayFactor, data1, type = "a")
print(p)
